/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.1.1/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'war'
    
    //for automating build of container and upload to DockerHub
    id "com.palantir.docker" version "0.32.0"
}


repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

//project.version '1.0.0'
project.description = "Image display and sorting site";
project.archivesBaseName = 'photo';


dependencies {
    // Use JUnit test framework.
    testImplementation 'junit:junit:4.13.2'

    //use the local libraries
    implementation fileTree(dir: 'thirdparty', include: ['*.jar'])
    
    compileOnly 'org.apache.tomcat:tomcat-catalina:8.5.46'
    implementation 'org.mongodb:mongodb-driver-sync:4.3.0'
    
    // https://mvnrepository.com/artifact/com.bmuschko/gradle-docker-plugin
    implementation 'com.bmuschko:gradle-docker-plugin:6.7.0'  
}


 
docker {
    dependsOn build
    name 'hub.docker.com/kswenson6206/photegrity:1.0.0'
    copySpec.from("build/libs")
    tag 'DockerHub', "kswenson6206/photegrity:1.0.0"
    //files photo.war
    //buildArgs([BUILD_VERSION: 'version'])
    //labels(['key': 'value'])
    //pull true
    //noCache true
}




//java source files are UTF-8
apply plugin: "java"
tasks.withType(JavaCompile) {
  options.encoding = "UTF-8"
}
