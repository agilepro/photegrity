/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.1.1/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'war'
    id 'com.bmuschko.docker-remote-api' version '6.7.0'
}
apply plugin: 'com.bmuschko.docker-remote-api'

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}



dependencies {
    // Use JUnit test framework.
    testImplementation 'junit:junit:4.13.2'

    //use the local libraries
    implementation fileTree(dir: 'thirdparty', include: ['*.jar'])
    
    compileOnly 'org.apache.tomcat:tomcat-catalina:8.5.46'
    implementation 'org.mongodb:mongodb-driver-sync:4.3.0'
    
    // https://mvnrepository.com/artifact/com.bmuschko/gradle-docker-plugin
    implementation 'com.bmuschko:gradle-docker-plugin:6.7.0'  
}

task copyWar(type: Copy) {
    dependsOn   'war'
    from        "build/libs/photo.war"
    into        'build/docker'
}
//task buildDockerImage(type: DockerBuildImage) {
//    dependsOn   copyWar
//    inputDir = file('docker/myapp')
//    images.add('test/myapp:latest')
//}
 
//build.dependsOn buildDockerImage
build.dependsOn copyWar

project.archivesBaseName = 'photo'


//java source files are UTF-8
apply plugin: "java"
tasks.withType(JavaCompile) {
  options.encoding = "UTF-8"
}
